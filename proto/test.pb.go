// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/test.proto

/*
Package txwx is a generated protocol buffer package.

It is generated from these files:
	proto/test.proto

It has these top-level messages:
	ServerStatus
	WeatherMessage
*/
package txwx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WeatherMessage_Type int32

const (
	WeatherMessage_METAR  WeatherMessage_Type = 0
	WeatherMessage_TAF    WeatherMessage_Type = 1
	WeatherMessage_BEACON WeatherMessage_Type = 2
)

var WeatherMessage_Type_name = map[int32]string{
	0: "METAR",
	1: "TAF",
	2: "BEACON",
}
var WeatherMessage_Type_value = map[string]int32{
	"METAR":  0,
	"TAF":    1,
	"BEACON": 2,
}

func (x WeatherMessage_Type) String() string {
	return proto.EnumName(WeatherMessage_Type_name, int32(x))
}
func (WeatherMessage_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ServerStatus struct {
	TimeOk                 bool     `protobuf:"varint,1,opt,name=time_ok,json=timeOk" json:"time_ok,omitempty"`
	WeatherUpdatesOk       bool     `protobuf:"varint,2,opt,name=weather_updates_ok,json=weatherUpdatesOk" json:"weather_updates_ok,omitempty"`
	MetarsTracked          uint32   `protobuf:"varint,3,opt,name=metars_tracked,json=metarsTracked" json:"metars_tracked,omitempty"`
	TafsTracked            uint32   `protobuf:"varint,4,opt,name=tafs_tracked,json=tafsTracked" json:"tafs_tracked,omitempty"`
	FreqSchemeList         []uint32 `protobuf:"varint,5,rep,packed,name=freq_scheme_list,json=freqSchemeList" json:"freq_scheme_list,omitempty"`
	FreqSchemeDwell        []uint32 `protobuf:"varint,6,rep,packed,name=freq_scheme_dwell,json=freqSchemeDwell" json:"freq_scheme_dwell,omitempty"`
	FreqSchemeModmode      []uint32 `protobuf:"varint,7,rep,packed,name=freq_scheme_modmode,json=freqSchemeModmode" json:"freq_scheme_modmode,omitempty"`
	FreqSchemeCurrentIndex uint32   `protobuf:"varint,8,opt,name=freq_scheme_current_index,json=freqSchemeCurrentIndex" json:"freq_scheme_current_index,omitempty"`
	FreqBandStart          uint32   `protobuf:"varint,9,opt,name=freq_band_start,json=freqBandStart" json:"freq_band_start,omitempty"`
	FreqBandEnd            uint32   `protobuf:"varint,10,opt,name=freq_band_end,json=freqBandEnd" json:"freq_band_end,omitempty"`
}

func (m *ServerStatus) Reset()                    { *m = ServerStatus{} }
func (m *ServerStatus) String() string            { return proto.CompactTextString(m) }
func (*ServerStatus) ProtoMessage()               {}
func (*ServerStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ServerStatus) GetTimeOk() bool {
	if m != nil {
		return m.TimeOk
	}
	return false
}

func (m *ServerStatus) GetWeatherUpdatesOk() bool {
	if m != nil {
		return m.WeatherUpdatesOk
	}
	return false
}

func (m *ServerStatus) GetMetarsTracked() uint32 {
	if m != nil {
		return m.MetarsTracked
	}
	return 0
}

func (m *ServerStatus) GetTafsTracked() uint32 {
	if m != nil {
		return m.TafsTracked
	}
	return 0
}

func (m *ServerStatus) GetFreqSchemeList() []uint32 {
	if m != nil {
		return m.FreqSchemeList
	}
	return nil
}

func (m *ServerStatus) GetFreqSchemeDwell() []uint32 {
	if m != nil {
		return m.FreqSchemeDwell
	}
	return nil
}

func (m *ServerStatus) GetFreqSchemeModmode() []uint32 {
	if m != nil {
		return m.FreqSchemeModmode
	}
	return nil
}

func (m *ServerStatus) GetFreqSchemeCurrentIndex() uint32 {
	if m != nil {
		return m.FreqSchemeCurrentIndex
	}
	return 0
}

func (m *ServerStatus) GetFreqBandStart() uint32 {
	if m != nil {
		return m.FreqBandStart
	}
	return 0
}

func (m *ServerStatus) GetFreqBandEnd() uint32 {
	if m != nil {
		return m.FreqBandEnd
	}
	return 0
}

type WeatherMessage struct {
	Type            WeatherMessage_Type `protobuf:"varint,1,opt,name=type,enum=txwx.WeatherMessage_Type" json:"type,omitempty"`
	TxTime          uint32              `protobuf:"varint,2,opt,name=tx_time,json=txTime" json:"tx_time,omitempty"`
	StationLat      float32             `protobuf:"fixed32,3,opt,name=station_lat,json=stationLat" json:"station_lat,omitempty"`
	StationLng      float32             `protobuf:"fixed32,4,opt,name=station_lng,json=stationLng" json:"station_lng,omitempty"`
	ObservationTime uint32              `protobuf:"varint,5,opt,name=observation_time,json=observationTime" json:"observation_time,omitempty"`
	TextData        string              `protobuf:"bytes,10,opt,name=text_data,json=textData" json:"text_data,omitempty"`
	ServerStatus    *ServerStatus       `protobuf:"bytes,11,opt,name=server_status,json=serverStatus" json:"server_status,omitempty"`
}

func (m *WeatherMessage) Reset()                    { *m = WeatherMessage{} }
func (m *WeatherMessage) String() string            { return proto.CompactTextString(m) }
func (*WeatherMessage) ProtoMessage()               {}
func (*WeatherMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WeatherMessage) GetType() WeatherMessage_Type {
	if m != nil {
		return m.Type
	}
	return WeatherMessage_METAR
}

func (m *WeatherMessage) GetTxTime() uint32 {
	if m != nil {
		return m.TxTime
	}
	return 0
}

func (m *WeatherMessage) GetStationLat() float32 {
	if m != nil {
		return m.StationLat
	}
	return 0
}

func (m *WeatherMessage) GetStationLng() float32 {
	if m != nil {
		return m.StationLng
	}
	return 0
}

func (m *WeatherMessage) GetObservationTime() uint32 {
	if m != nil {
		return m.ObservationTime
	}
	return 0
}

func (m *WeatherMessage) GetTextData() string {
	if m != nil {
		return m.TextData
	}
	return ""
}

func (m *WeatherMessage) GetServerStatus() *ServerStatus {
	if m != nil {
		return m.ServerStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerStatus)(nil), "txwx.ServerStatus")
	proto.RegisterType((*WeatherMessage)(nil), "txwx.WeatherMessage")
	proto.RegisterEnum("txwx.WeatherMessage_Type", WeatherMessage_Type_name, WeatherMessage_Type_value)
}

func init() { proto.RegisterFile("proto/test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 486 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x93, 0x4f, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x6b, 0xfe, 0x33, 0x60, 0xe2, 0x6c, 0xa5, 0xd6, 0x51, 0x0f, 0xa5, 0x48, 0x8d, 0xa8,
	0x94, 0x52, 0x89, 0x1e, 0xaa, 0x1e, 0x21, 0xa1, 0x52, 0xa5, 0x50, 0x24, 0x43, 0xd5, 0xe3, 0x6a,
	0x61, 0x27, 0xc4, 0x02, 0xdb, 0x74, 0x77, 0x08, 0xce, 0x37, 0xeb, 0xbd, 0x5f, 0x2c, 0xda, 0xdd,
	0x24, 0x38, 0x37, 0xef, 0x7b, 0xbf, 0xd1, 0x78, 0xe6, 0xed, 0x42, 0xb0, 0x53, 0x19, 0x65, 0x5f,
	0x08, 0x35, 0x0d, 0xec, 0x27, 0xab, 0x50, 0x7e, 0xc8, 0x7b, 0xff, 0xca, 0xd0, 0x9e, 0xa3, 0xba,
	0x43, 0x35, 0x27, 0x41, 0x7b, 0xcd, 0xde, 0x42, 0x9d, 0xe2, 0x04, 0x79, 0xb6, 0x09, 0xbd, 0xae,
	0xd7, 0x6f, 0x44, 0x35, 0x73, 0x9c, 0x6d, 0xd8, 0x05, 0xb0, 0x03, 0x0a, 0xba, 0x45, 0xc5, 0xf7,
	0x3b, 0x29, 0x08, 0xb5, 0x61, 0x4a, 0x96, 0x09, 0x1e, 0x9d, 0xdf, 0xce, 0x98, 0x6d, 0xd8, 0x47,
	0xe8, 0x24, 0x48, 0x42, 0x69, 0x4e, 0x4a, 0xac, 0x36, 0x28, 0xc3, 0x72, 0xd7, 0xeb, 0xfb, 0x91,
	0xef, 0xd4, 0x85, 0x13, 0xd9, 0x07, 0x68, 0x93, 0xb8, 0x39, 0x42, 0x15, 0x0b, 0xb5, 0x8c, 0xf6,
	0x84, 0x5c, 0x40, 0x70, 0xa3, 0xf0, 0x2f, 0xd7, 0xab, 0x5b, 0x4c, 0x90, 0x6f, 0x63, 0x4d, 0x61,
	0xb5, 0x5b, 0xee, 0xfb, 0xe3, 0x52, 0xe0, 0x45, 0x1d, 0xe3, 0xcd, 0xad, 0x75, 0x1d, 0x6b, 0x62,
	0x03, 0x38, 0x2d, 0xd2, 0xf2, 0x80, 0xdb, 0x6d, 0x58, 0x7b, 0xc6, 0x4f, 0x8e, 0xf8, 0x95, 0xb1,
	0xd8, 0x10, 0x5e, 0x17, 0xf9, 0x24, 0x93, 0x49, 0x26, 0x31, 0xac, 0x3f, 0x57, 0x9c, 0x1e, 0x2b,
	0xa6, 0xce, 0x64, 0xdf, 0xe1, 0xac, 0x58, 0xb3, 0xda, 0x2b, 0x85, 0x29, 0xf1, 0x38, 0x95, 0x98,
	0x87, 0x0d, 0x3b, 0xc1, 0x9b, 0x63, 0xd5, 0xa5, 0xb3, 0x7f, 0x1a, 0x97, 0x9d, 0x83, 0xfd, 0x03,
	0xbe, 0x14, 0xa9, 0xe4, 0x9a, 0x84, 0xa2, 0xb0, 0xe9, 0xf6, 0x62, 0xe4, 0xb1, 0x48, 0xe5, 0xdc,
	0x88, 0xac, 0x07, 0xfe, 0x91, 0xc3, 0x54, 0x86, 0xe0, 0x16, 0xf3, 0x44, 0x4d, 0x52, 0xd9, 0xfb,
	0x5f, 0x82, 0xce, 0x1f, 0xb7, 0xf7, 0x29, 0x6a, 0x2d, 0xd6, 0xc8, 0x3e, 0x43, 0x85, 0xee, 0x77,
	0x68, 0x93, 0xeb, 0x0c, 0xcf, 0x06, 0x26, 0xe2, 0xc1, 0x4b, 0x66, 0xb0, 0xb8, 0xdf, 0x61, 0x64,
	0x31, 0x9b, 0x75, 0xce, 0x4d, 0xbe, 0x36, 0x47, 0x3f, 0xaa, 0x51, 0xbe, 0x88, 0x13, 0x64, 0xef,
	0xa1, 0xa5, 0x49, 0x50, 0x9c, 0xa5, 0x7c, 0x2b, 0xc8, 0x46, 0x57, 0x8a, 0xe0, 0x51, 0xba, 0x16,
	0xf4, 0x02, 0x48, 0xd7, 0x36, 0xb6, 0x02, 0x90, 0xae, 0xd9, 0x27, 0x08, 0xb2, 0xa5, 0x46, 0x75,
	0xe7, 0x20, 0xdb, 0xa3, 0x6a, 0x7b, 0x9c, 0x14, 0x74, 0xdb, 0xec, 0x1d, 0x34, 0x09, 0x73, 0xe2,
	0x52, 0x90, 0xb0, 0x73, 0x36, 0xa3, 0x86, 0x11, 0xae, 0x04, 0x09, 0xf6, 0x0d, 0x7c, 0x6d, 0xaf,
	0xa7, 0xd9, 0x16, 0xed, 0x75, 0xd8, 0xea, 0x7a, 0xfd, 0xd6, 0x90, 0xb9, 0xd1, 0x8a, 0x37, 0x37,
	0x6a, 0xeb, 0xc2, 0xa9, 0x77, 0x0e, 0x15, 0x33, 0x29, 0x6b, 0x42, 0x75, 0x3a, 0x59, 0x8c, 0xa2,
	0xe0, 0x15, 0xab, 0x43, 0x79, 0x31, 0xfa, 0x11, 0x78, 0x0c, 0xa0, 0x36, 0x9e, 0x8c, 0x2e, 0x67,
	0xbf, 0x82, 0xd2, 0xb2, 0x66, 0x5f, 0xc3, 0xd7, 0x87, 0x00, 0x00, 0x00, 0xff, 0xff, 0x06, 0xb7,
	0x3a, 0x64, 0x21, 0x03, 0x00, 0x00,
}
